{"version":3,"sources":["actions/constants.js","actions/index.js","components/AddTodos.js","components/TodoItem.js","components/ListTodos.js","components/Home.js","reducers/TodoReducer.js","reducers/index.js","sagas/index.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_ACTIONS","FETCH_ACTIONS_SUCCESS","FETCH_ACTIONS_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION","DELETE_ACTION_REQUEST","DELETE_ACTION","fetch_actions","type","OuterWrapper","styled","div","_templateObject","StyledInput","input","_templateObject2","StyledButton","button","_templateObject3","AddTodos","state","text","handleChange","e","_this","setState","target","value","onAddClicked","console","log","props","add_action","react_default","a","createElement","onChange","this","onClick","Component","connect","dispatch","payload","ItemWrapper","TodoItem_templateObject","StyledCheckbox","TodoItem_templateObject2","StyledText","p","TodoItem_templateObject3","_templateObject4","TodoItem","_this$props","id","TodoItem_StyledButton","delete_action","ListTodos","fetchActions","todos","actions","map","act","components_TodoItem","key","_id","action","bindActionCreators","MainWrapper","Home_templateObject","StyledHeading","h1","Home_templateObject2","Home","components_AddTodos","components_ListTodos","initialState","rootReducer","combineReducers","arguments","length","undefined","Object","objectSpread","concat","toConsumableArray","filter","addAction","deleteAction","mySaga","fetchActionsFromApi","axios","get","addActionToDatabase","post","deleteActionFromDatabase","delete","response","regenerator_default","wrap","_context","prev","next","call","sent","put","data","t0","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","takeLatest","_marked4","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","App","es","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a2678ed.chunk.js","sourcesContent":["export const FETCH_ACTIONS = 'FETCH_ACTIONS';\nexport const FETCH_ACTIONS_SUCCESS = 'FETCH_ACTIONS_SUCCESS';\nexport const FETCH_ACTIONS_FAILURE = 'FETCH_ACTIONS_FAILURE';\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION = 'ADD_ACTION';\nexport const DELETE_ACTION_REQUEST = 'DELETE_ACTION_REQUEST';\nexport const DELETE_ACTION = 'DELETE_ACTION';\n\n\n","import {FETCH_ACTIONS, ADD_ACTION_REQUEST, DELETE_ACTION_REQUEST} from './constants'\n\nexport const fetch_actions = () =>{\n    return {\n        type: FETCH_ACTIONS,\n    }\n}\n\nexport const add_action = (text) => {\n    return {\n        type: ADD_ACTION_REQUEST,\n        payload: text\n    }\n}\n\nexport const delete_action = (id) => {\n    console.log('Delete action with id',id);\n    return {\n        type: DELETE_ACTION_REQUEST,\n        payload: id\n    }\n}","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport {connect} from 'react-redux'\nimport {add_action} from '../actions'\nconst OuterWrapper = styled.div`\n    width: 100%;\n    display:flex;\n    justify-content: center;\n`;\n\nconst StyledInput = styled.input`\n    width: 70%;\n    padding: 20px;\n    border: 1px solid black;\n    border-radius: 10px;\n`;\n\nconst StyledButton = styled.button`\n    width: 10%;\n    color: white;\n    background-color: #5b73a7;\n    border: none;\n    border-radius: 10px;\n    margin-left: 10px;\n`\n\n\nclass AddTodos extends Component {\n\n    state = {\n        text: ''\n    }\n\n   handleChange = (e) =>{\n       this.setState({\n           text: e.target.value\n       })\n   } \n\n   onAddClicked = () => {\n        console.log('Add', this.state.text)\n        //Dispatch Action\n        this.props.add_action(this.state.text);\n   }\n\n  render() {\n    return (\n     <OuterWrapper>\n        <StyledInput onChange={this.handleChange} />\n        <StyledButton onClick={this.onAddClicked} >Add</StyledButton>\n      </OuterWrapper>   \n    )\n  }\n}\n\nconst mapDispatchToProps =  dispatch => ({\n    add_action: (text) => dispatch(add_action(text))\n})\n\nexport default connect(null,mapDispatchToProps)(AddTodos)","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport {connect} from 'react-redux'\nimport {delete_action} from '../actions'\n\nconst ItemWrapper = styled.div`\n    width:80%;\n    background-color: #3d6fe9;\n    border-radius: 10px;\n    padding: 10px;\n    margin-top: 20px;\n    display:flex;\n    flex-direction:row;\n`\n\nconst StyledCheckbox = styled.input`\n    margin: 10px;\n`\n\nconst StyledText = styled.p`\n    margin: 8px;\n    color: #fff;\n    width:90%;\n`\n\nconst StyledButton = styled.button`\n    width: 10%;\n    color: white;\n    background-color: #5b73a7;\n    border: 1px solid white;\n    border-radius: 10px;\n    margin-left: 10px;\n`\n\nclass TodoItem extends Component {\n\n  render() {\n    let {text,id} = this.props;  \n    return (\n      <ItemWrapper>\n          <StyledCheckbox type=\"checkbox\" />\n          <StyledText>{text}</StyledText>\n          <StyledButton onClick={() => this.props.delete_action(id)}>Delete</StyledButton>\n      </ItemWrapper>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    delete_action: (id) => dispatch(delete_action(id))\n})\n\n\nexport default connect(null,mapDispatchToProps)(TodoItem);","import React, { Component } from 'react'\nimport TodoItem from './TodoItem'\nimport {connect} from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport {fetch_actions} from '../actions';\n\nclass ListTodos extends Component {\n  componentDidMount(){\n      this.props.fetchActions();\n  }  \n  render() {\n      let {actions} = this.props.todos;\n    return actions.map(act => <TodoItem key={act._id} id={act._id} text={act.action} />);\n  }\n}\n\nconst mapStateToProps  = state => ({\n    todos: state.todos\n});\n\nconst mapDispatchToProps  = dispatch => {\n    return bindActionCreators({fetchActions: fetch_actions},dispatch)\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ListTodos);","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport AddTodos from './AddTodos'\nimport ListTodos from './ListTodos'\n\n\nconst MainWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    background-color: #000;\n    flex-direction: column;\n    align-items: center;\n  `\n\nconst StyledHeading = styled.h1`\n  color: #fff;\n`  \n\nexport default class Home extends Component {\n  render() {\n    return (\n      <MainWrapper>\n        <StyledHeading>My Todo App</StyledHeading>\n        <AddTodos />\n        <ListTodos />\n      </MainWrapper>\n    )\n  }\n}\n","import {FETCH_ACTIONS_SUCCESS, FETCH_ACTIONS_FAILURE,ADD_ACTION, DELETE_ACTION} from '../actions/constants'\n\nconst initialState = {\n    actions: []\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type){\n\n        case FETCH_ACTIONS_SUCCESS:\n            console.log('REduceer',{...state,actions: action.payload})\n            return {...state,actions: action.payload}\n        \n        case FETCH_ACTIONS_FAILURE:\n            return state;    \n\n        case ADD_ACTION:\n            console.log('Add action',{...state,actions: [...state.actions,action.payload]})\n            return {...state,actions: [...state.actions,action.payload]}\n\n        case DELETE_ACTION:\n             console.log('DELETE action',{...state,actions: state.actions.filter(act => act._id !== action.payload)})\n            return {...state,actions: state.actions.filter(act => act._id !== action.payload._id)}\n\n        default:\n        return state;\n        \n    }\n}","import {combineReducers} from 'redux'\nimport TodoReducer from './TodoReducer'\n\n\nconst rootReducer = combineReducers({\n    todos: TodoReducer\n})\n\nexport default rootReducer;","import { call, put, takeLatest } from 'redux-saga/effects'\nimport {FETCH_ACTIONS,FETCH_ACTIONS_SUCCESS,FETCH_ACTIONS_FAILURE,ADD_ACTION,DELETE_ACTION_REQUEST,DELETE_ACTION,ADD_ACTION_REQUEST} from '../actions/constants'\nimport axios from 'axios'\n\nfunction fetchActionsFromApi(){\n    return axios.get('/api/todos');           \n}\n\nfunction addActionToDatabase(text){\n    return axios.post('/api/todos',{'action':text})\n}\n\nfunction deleteActionFromDatabase(id){\n    return axios.delete(`/api/todos/${id}`)\n}\n\nfunction* fetchActions(){\n    \n    try {\n        const response = yield call(fetchActionsFromApi)\n\n        yield put({'type':FETCH_ACTIONS_SUCCESS,'payload':response.data})\n    } catch(e){\n        \n        yield put({'type': FETCH_ACTIONS_FAILURE})\n    }\n}\n\nfunction* addAction(action){\n\n    try{\n        const response = yield call(addActionToDatabase,action.payload);\n        yield put({type: ADD_ACTION,payload: response.data})\n    } catch(e){\n        yield put({'type':FETCH_ACTIONS_FAILURE})\n    }\n\n}\n\nfunction* deleteAction(action){\n\n    try{\n        const response = yield call(deleteActionFromDatabase,action.payload);\n        yield put({type: DELETE_ACTION,payload: response.data})\n    } catch(e){\n        yield put({'type':FETCH_ACTIONS_FAILURE})\n    }\n\n}\n\nfunction* mySaga() {\n    yield takeLatest(FETCH_ACTIONS,fetchActions);\n    yield takeLatest(ADD_ACTION_REQUEST,addAction)\n    yield takeLatest(DELETE_ACTION_REQUEST,deleteAction)\n}\n\nexport default mySaga;","import React, { Component } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\nimport Home from './components/Home';\nimport rootReducer from './reducers'\nimport './App.css';\nimport createSagaMiddleware from 'redux-saga'\nimport mySaga from './sagas'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, {}, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mySaga);\n\nclass App extends Component {\n  render() {\n    return (\n     <Provider store={store}>\n      <Home />\n      </Provider>  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}